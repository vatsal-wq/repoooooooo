import React, { useState, useEffect } from 'react';
import axios from 'axios';
import ProductTable from './ProductTable';
import { useNavigate } from 'react-router-dom';
import isAuthenticated from '../auth/Flag';


function Home() {

    useEffect(() => {
        if(!isAuthenticated){
            alert("Please login First");
            navigate('/login');
        }
    }, []);

    const [products, setProducts] = useState([]);
    const [search, setSearch] = useState('');
    const [sortConfig, setSortConfig] = useState({key: null, direction: 'ascending'});
    const navigate = useNavigate();

    const addRedirect = () => {
        navigate('/add');
    }
    const logoutRedirect = () => {
        // isAuthenticated = false;
        navigate('/login')
    }

    const fetchProducts = async () => {
        const response = await axios.get('http://localhost:5000/products');
        console.log(response.data);
        setProducts(response.data);
    };

    useEffect(() => {
        fetchProducts();
    }, []);

    const sortedProducts = React.useMemo( () => {
        let sortableProducts = [...products];

        if (sortConfig.key){
            sortableProducts.sort((a,b) => {
                if (a[sortConfig.key] < b[sortConfig.key]){
                    return sortConfig.direction === 'ascending' ? -1 : 1;
                }
                
                if (a[sortConfig.key] > b[sortConfig.key]){
                    return sortConfig.direction === 'ascending' ? 1 : 1;
                }

                return 0;
            });
        }

        return sortableProducts.filter(product => 
            product.ProductName.toLowerCase().includes(search.toLowerCase() || 
            product.ProductCode.toLowerCase().includes(search.toLowerCase())));
    }, [products, sortConfig, search]);

    const requestSort = (key) => {
        let direction = 'ascending';
        if(sortConfig.key === key && sortConfig.direction === 'ascending'){
            direction = 'descending';
        }
        setSortConfig({key,direction});
    }
    // const filteredProducts = products.filter(product =>
    //     product.ProductName.toLowerCase().includes(search.toLowerCase())
    // );

    return (
        <div>
            <table style={{width:'100%'}}>
                <tr>
                    <td><h1>Welcome, {localStorage.getItem('username')}</h1></td>
                    <td><input
                            type="text" 
                            placeholder="Search Products..." 
                            value={search} 
                            onChange={(e) => setSearch(e.target.value)} />
                    </td>
                    <td><button onClick={addRedirect}>Add Product</button></td>
                    <td><button onClick={logoutRedirect} >Logout</button></td>
                </tr>
            </table>
            <ProductTable products={sortedProducts} requestSort={requestSort} sortConfig={sortConfig} />
        </div>
    );
}

export default Home;
